"""Add outbound_type field to OutboundRecord

Revision ID: d320b7ba5981
Revises: 
Create Date: 2025-07-19 10:43:53.279166

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'd320b7ba5981'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('inbound_record', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_inbound_customer_time'))
        batch_op.drop_index(batch_op.f('idx_inbound_warehouse'))
        batch_op.drop_index(batch_op.f('ix_inbound_record_identification_code'))
        batch_op.create_index(batch_op.f('ix_inbound_record_identification_code'), ['identification_code'], unique=True)

    with op.batch_alter_table('inventory', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_inventory_customer'))
        batch_op.drop_index(batch_op.f('idx_inventory_identification'))
        batch_op.drop_index(batch_op.f('idx_inventory_original_code'))
        batch_op.drop_index(batch_op.f('idx_inventory_package'))
        batch_op.drop_index(batch_op.f('idx_inventory_pallet'))
        batch_op.drop_index(batch_op.f('idx_inventory_warehouse'))
        batch_op.drop_index(batch_op.f('ix_inventory_customer_name'))
        batch_op.drop_index(batch_op.f('ix_inventory_identification_code'))
        batch_op.drop_index(batch_op.f('ix_inventory_inbound_time'))
        batch_op.drop_index(batch_op.f('ix_inventory_operated_warehouse_id'))
        batch_op.create_unique_constraint(None, ['identification_code'])

    with op.batch_alter_table('outbound_record', schema=None) as batch_op:
        batch_op.add_column(sa.Column('outbound_type', sa.String(length=50), nullable=True, comment='出库类型：normal-正常出库，return_frontend-返回前端仓'))
        batch_op.alter_column('batch_sequence',
               existing_type=mysql.INTEGER(),
               comment='分批序号，同一识别编码的分批出库序号(1-N)',
               existing_comment='批次序号，该票据在批次中的序号(1-N)',
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('idx_outbound_customer'))
        batch_op.drop_index(batch_op.f('idx_outbound_customer_time'))
        batch_op.drop_index(batch_op.f('idx_outbound_time'))
        batch_op.drop_index(batch_op.f('idx_outbound_warehouse'))

    with op.batch_alter_table('receive_records', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_receive_batch'))
        batch_op.drop_index(batch_op.f('ix_receive_records_identification_code'))
        batch_op.create_index(batch_op.f('ix_receive_records_identification_code'), ['identification_code'], unique=True)

    with op.batch_alter_table('transit_cargo', schema=None) as batch_op:
        batch_op.alter_column('delivery_plate_number',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment='送货干线车',
               existing_nullable=True)
        batch_op.alter_column('inbound_plate',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment='入库车牌',
               existing_nullable=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=80),
               type_=sa.String(length=50),
               comment='用户名',
               existing_nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment='密码哈希',
               existing_nullable=False)
        batch_op.alter_column('real_name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               type_=sa.String(length=50),
               nullable=False,
               comment='真实姓名')
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=120),
               type_=sa.String(length=100),
               nullable=True,
               comment='邮箱')
        batch_op.alter_column('phone',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment='手机号',
               existing_nullable=True)
        batch_op.alter_column('employee_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50),
               comment='员工编号',
               existing_nullable=True)
        batch_op.alter_column('warehouse_id',
               existing_type=mysql.INTEGER(),
               comment='所属仓库ID',
               existing_nullable=True)
        batch_op.alter_column('user_type',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               type_=sa.Enum('admin', 'manager', 'operator', 'customer', name='user_type'),
               comment='用户类型',
               existing_nullable=True,
               existing_server_default=sa.text("'operator'"))
        batch_op.alter_column('is_admin',
               existing_type=mysql.TINYINT(display_width=1),
               comment='是否为超级管理员',
               existing_nullable=True,
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('status',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               type_=sa.Enum('active', 'inactive', 'locked', name='user_status'),
               comment='账号状态',
               existing_nullable=True,
               existing_server_default=sa.text("'active'"))
        batch_op.alter_column('last_login_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               comment='最后登录时间',
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               comment='创建时间',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               comment='更新时间',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.drop_index(batch_op.f('email'))
        batch_op.create_foreign_key(None, 'warehouse', ['warehouse_id'], ['id'])

    with op.batch_alter_table('warehouse', schema=None) as batch_op:
        batch_op.alter_column('warehouse_code',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=10),
               type_=sa.String(length=20),
               comment='仓库代码',
               existing_nullable=False)
        batch_op.alter_column('warehouse_name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               comment='仓库名称',
               existing_nullable=False)
        batch_op.alter_column('warehouse_type',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               type_=sa.Enum('frontend', 'backend', name='warehouse_type'),
               comment='仓库类型',
               existing_nullable=False)
        batch_op.alter_column('address',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment='仓库地址',
               existing_nullable=True)
        batch_op.alter_column('contact_person',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               type_=sa.String(length=50),
               comment='联系人',
               existing_nullable=True)
        batch_op.alter_column('contact_phone',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment='联系电话',
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               type_=sa.Enum('active', 'inactive', name='warehouse_status'),
               comment='状态',
               existing_nullable=True,
               existing_server_default=sa.text("'active'"))
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               comment='创建时间',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               comment='更新时间',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('warehouse', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('status',
               existing_type=sa.Enum('active', 'inactive', name='warehouse_status'),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment=None,
               existing_comment='状态',
               existing_nullable=True,
               existing_server_default=sa.text("'active'"))
        batch_op.alter_column('contact_phone',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment=None,
               existing_comment='联系电话',
               existing_nullable=True)
        batch_op.alter_column('contact_person',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               comment=None,
               existing_comment='联系人',
               existing_nullable=True)
        batch_op.alter_column('address',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment=None,
               existing_comment='仓库地址',
               existing_nullable=True)
        batch_op.alter_column('warehouse_type',
               existing_type=sa.Enum('frontend', 'backend', name='warehouse_type'),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment=None,
               existing_comment='仓库类型',
               existing_nullable=False)
        batch_op.alter_column('warehouse_name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               comment=None,
               existing_comment='仓库名称',
               existing_nullable=False)
        batch_op.alter_column('warehouse_code',
               existing_type=sa.String(length=20),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=10),
               comment=None,
               existing_comment='仓库代码',
               existing_nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_index(batch_op.f('email'), ['email'], unique=True)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('last_login_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               comment=None,
               existing_comment='最后登录时间',
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.Enum('active', 'inactive', 'locked', name='user_status'),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment=None,
               existing_comment='账号状态',
               existing_nullable=True,
               existing_server_default=sa.text("'active'"))
        batch_op.alter_column('is_admin',
               existing_type=mysql.TINYINT(display_width=1),
               comment=None,
               existing_comment='是否为超级管理员',
               existing_nullable=True,
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('user_type',
               existing_type=sa.Enum('admin', 'manager', 'operator', 'customer', name='user_type'),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment=None,
               existing_comment='用户类型',
               existing_nullable=True,
               existing_server_default=sa.text("'operator'"))
        batch_op.alter_column('warehouse_id',
               existing_type=mysql.INTEGER(),
               comment=None,
               existing_comment='所属仓库ID',
               existing_nullable=True)
        batch_op.alter_column('employee_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50),
               comment=None,
               existing_comment='员工编号',
               existing_nullable=True)
        batch_op.alter_column('phone',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment=None,
               existing_comment='手机号',
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=120),
               nullable=False,
               comment=None,
               existing_comment='邮箱')
        batch_op.alter_column('real_name',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               nullable=True,
               comment=None,
               existing_comment='真实姓名')
        batch_op.alter_column('password_hash',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment=None,
               existing_comment='密码哈希',
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=80),
               comment=None,
               existing_comment='用户名',
               existing_nullable=False)

    with op.batch_alter_table('transit_cargo', schema=None) as batch_op:
        batch_op.alter_column('inbound_plate',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment=None,
               existing_comment='入库车牌',
               existing_nullable=True)
        batch_op.alter_column('delivery_plate_number',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20),
               comment=None,
               existing_comment='送货干线车',
               existing_nullable=True)

    with op.batch_alter_table('receive_records', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_receive_records_identification_code'))
        batch_op.create_index(batch_op.f('ix_receive_records_identification_code'), ['identification_code'], unique=False)
        batch_op.create_index(batch_op.f('idx_receive_batch'), ['batch_no'], unique=False)

    with op.batch_alter_table('outbound_record', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_outbound_warehouse'), ['operated_warehouse_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_outbound_time'), ['outbound_time'], unique=False)
        batch_op.create_index(batch_op.f('idx_outbound_customer_time'), ['customer_name', 'outbound_time'], unique=False)
        batch_op.create_index(batch_op.f('idx_outbound_customer'), ['customer_name'], unique=False)
        batch_op.alter_column('batch_sequence',
               existing_type=mysql.INTEGER(),
               comment='批次序号，该票据在批次中的序号(1-N)',
               existing_comment='分批序号，同一识别编码的分批出库序号(1-N)',
               existing_nullable=True)
        batch_op.drop_column('outbound_type')

    with op.batch_alter_table('inventory', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index(batch_op.f('ix_inventory_operated_warehouse_id'), ['operated_warehouse_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_inventory_inbound_time'), ['inbound_time'], unique=False)
        batch_op.create_index(batch_op.f('ix_inventory_identification_code'), ['identification_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_inventory_customer_name'), ['customer_name'], unique=False)
        batch_op.create_index(batch_op.f('idx_inventory_warehouse'), ['operated_warehouse_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_inventory_pallet'), ['pallet_count'], unique=False)
        batch_op.create_index(batch_op.f('idx_inventory_package'), ['package_count'], unique=False)
        batch_op.create_index(batch_op.f('idx_inventory_original_code'), ['original_identification_code'], unique=False)
        batch_op.create_index(batch_op.f('idx_inventory_identification'), ['identification_code'], unique=False)
        batch_op.create_index(batch_op.f('idx_inventory_customer'), ['customer_name'], unique=False)

    with op.batch_alter_table('inbound_record', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_inbound_record_identification_code'))
        batch_op.create_index(batch_op.f('ix_inbound_record_identification_code'), ['identification_code'], unique=False)
        batch_op.create_index(batch_op.f('idx_inbound_warehouse'), ['operated_warehouse_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_inbound_customer_time'), ['customer_name', 'inbound_time'], unique=False)

    # ### end Alembic commands ###
